before_script:
  - apk add --no-cache py-pip

stages:
  - release
#  - deploy

variables:
  CONTAINER_IMAGE: sickrage/sickrage

  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375

services:
  - docker:dind

sentry_release:
  stage: release
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - export SENTRY_URL=$SENTRY_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    - export SENTRY_ORG=$SENTRY_ORG
    - export SENTRY_PROJECT=$SENTRY_PROJECT
    - sentry-cli releases new --project $SENTRY_PROJECT $(cat sickrage/version.txt)
    - sentry-cli releases set-commits --auto $(cat sickrage/version.txt)
    - sentry-cli releases finalize $(cat sickrage/version.txt)
    - sentry-cli releases deploys $(cat sickrage/version.txt) new -e $CI_COMMIT_REF_NAME
  only:
    - develop
    - master

#deploy_docker_master:
#  stage: deploy
#  image: docker:latest
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:latest || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:latest -t $CONTAINER_IMAGE:$(cat sickrage/version.txt) -f Dockerfile .
#    - docker tag $CONTAINER_IMAGE:$(cat sickrage/version.txt) $CONTAINER_IMAGE:latest
#    - docker push $CONTAINER_IMAGE:$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:latest
#  only:
#    - master
#  except:
#    - tags
#
#deploy_docker_master_arm32v7:
#  stage: deploy
#  image: docker:latest
#  before_script:
#    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:arm32v7-latest || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:arm32v7-latest -t $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt)  -f Dockerfile.arm32v7 .
#    - docker tag $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt) $CONTAINER_IMAGE-arm32v7:latest
#    - docker push $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:arm32v7-latest
#  only:
#    - master
#  except:
#    - tags
#
#deploy_docker_master_arm64v8:
#  stage: deploy
#  image: docker:latest
#  before_script:
#    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:arm64v8-latest || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:arm64v8-latest -t $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt)  -f Dockerfile.arm64v8 .
#    - docker tag $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt) $CONTAINER_IMAGE:arm64v8-latest
#    - docker push $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:arm64v8-latest
#  only:
#    - master
#  except:
#    - tags
#
#deploy_docker_develop:
#  stage: deploy
#  image: docker:latest
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:develop || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:develop -t $CONTAINER_IMAGE:$(cat sickrage/version.txt) -f Dockerfile .
#    - docker tag $CONTAINER_IMAGE:$(cat sickrage/version.txt) $CONTAINER_IMAGE:develop
#    - docker push $CONTAINER_IMAGE:$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:develop
#  only:
#    - develop
#  except:
#    - tags
#
#deploy_docker_develop_arm32v7:
#  stage: deploy
#  image: docker:latest
#  before_script:
#    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:arm32v7-develop || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:arm32v7-develop -t $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt) -f Dockerfile.arm32v7 .
#    - docker tag $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt) $CONTAINER_IMAGE:arm32v7-develop
#    - docker push $CONTAINER_IMAGE:arm32v7-$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:arm32v7-develop
#  only:
#    - develop
#  except:
#    - tags
#
#deploy_docker_develop_arm64v8:
#  stage: deploy
#  image: docker:latest
#  before_script:
#    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
#  script:
#    - echo $CI_COMMIT_SHA
#    - echo $CONTAINER_IMAGE
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#    - docker pull $CONTAINER_IMAGE:arm64v8-develop || true
#    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" --cache-from $CONTAINER_IMAGE:arm64v8-develop -t $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt) -f Dockerfile.arm64v8 .
#    - docker tag $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt) $CONTAINER_IMAGE:arm64v8-develop
#    - docker push $CONTAINER_IMAGE:arm64v8-$(cat sickrage/version.txt)
#    - docker push $CONTAINER_IMAGE:arm64v8-develop
#  only:
#    - develop
#  except:
#    - tags