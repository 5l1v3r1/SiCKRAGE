before_script:
  - apk add --no-cache py-pip

stages:
  - release
  - deploy

variables:
  CONTAINER_IMAGE: sickrage/sickrage

  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375

services:
  - docker:dind

sentry_release:
  stage: release
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - export SENTRY_URL=$SENTRY_URL
    - export SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
    - export SENTRY_ORG=$SENTRY_ORG
    - export SENTRY_PROJECT=$SENTRY_PROJECT
    - sentry-cli releases new --project $SENTRY_PROJECT $(cat sickrage/version.txt)
    - sentry-cli releases set-commits --auto $(cat sickrage/version.txt)
    - sentry-cli releases finalize $(cat sickrage/version.txt)
  only:
    - develop
    - master

deploy_docker_master:
  stage: deploy
  image: docker:latest
  script:
    - echo $CI_COMMIT_SHA
    - echo $CONTAINER_IMAGE
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" -t $CONTAINER_IMAGE:$(cat sickrage/version.txt) .
    - docker tag $CONTAINER_IMAGE:$(cat sickrage/version.txt) $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:$(cat sickrage/version.txt)
    - docker push $CONTAINER_IMAGE:latest
  only:
    - master
  except:
    - tags

deploy_docker_develop:
  stage: deploy
  image: docker:latest
  script:
    - echo $CI_COMMIT_SHA
    - echo $CONTAINER_IMAGE
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - docker build --network host --build-arg="SOURCE_COMMIT=$CI_COMMIT_SHA" -t $CONTAINER_IMAGE:$(cat sickrage/version.txt) .
    - docker tag $CONTAINER_IMAGE:$(cat sickrage/version.txt) $CONTAINER_IMAGE:develop
    - docker push $CONTAINER_IMAGE:$(cat sickrage/version.txt)
    - docker push $CONTAINER_IMAGE:develop
  only:
    - develop
  except:
    - tags